/**
 * Header json_loader.h
 * 
 * JSON loader converts the token vector generated by
 * parser into a container object.
 */
#ifndef ABEL_ON_C_JSON_LOADER_H
#define ABEL_ON_C_JSON_LOADER_H

#include "json_parser.h"   // has converter and json_token
//#include "object.h"
//#include "list.h"
//#include "dict.h"
#include "container.h"

struct json_loader {
    enum json_container_type root_container_type;
    int current_index;    // init to 0
};

struct json_loader able_make_json_loader();

struct abel_dict* make_dict(struct json_loader* ptr_loader,
        int index_opening_token, struct abel_vector* ptr_token_vector);

struct abel_list* make_list(struct json_loader* ptr_loader,
        int index_opening_token, struct abel_vector* ptr_token_vector);

void at_key(struct json_loader* ptr_loader, struct abel_dict* ptr_dict,
        struct abel_vector* token_vector);

void at_iter_key(struct json_loader* ptr_loader, struct abel_list* ptr_target_list,
        struct abel_vector* ptr_token_vector);

void fill_list(struct json_loader* ptr_loader, struct abel_list* ptr_target_list,
        int key, struct abel_vector* ptr_token_vector);

void fill_dict(struct json_loader* ptr_loader, struct abel_dict* ptr_dict,
        char* key, struct abel_vector* ptr_token_vector);

void load_from_parser(struct json_loader* ptr_loader,
        struct json_parser* ptr_parser, struct abel_dict* ptr_dict);

#endif